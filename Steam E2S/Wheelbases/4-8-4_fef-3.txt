@name 4-8-4 FEF-3
@inputs Reverser Base:entity LeadFWheel:entity LeadBWheel:entity
@persist Base:entity Holo HolosSpawned RodRadius Speed WheelRotation

@persist DistFromWheel Wheel_F Wheel_R LiftingArm Wheel_M Wheel_M1

@persist SideRod_L MainRod_L Crosshead_L EccentricCrank_L EccentricRod_L ExpansionPlate_L EccentricRodEnd_L
@persist UnionLink_L Combination_L CombinationEnd_L ValveStem_L ExpansionLink_L LiftingLink_L LiftingLinkEnd_L

@persist SideRod_R MainRod_R Crosshead_R EccentricCrank_R EccentricRod_R ExpansionPlate_R EccentricRodEnd_R
@persist UnionLink_R Combination_R CombinationEnd_R ValveStem_R ExpansionLink_R LiftingLink_R LiftingLinkEnd_R

if(dupefinished()){reset()}
if(first() | duped()) {
    
    RodMaterial = "sprops/textures/sprops_metal4"
    RodColor = vec(218)
    RodRadius = 19.6
    DistFromWheel = 40
    ParentScale = 0
    
    #Driving Wheels
    Holo = 1
    holoCreate(Holo, Base:toWorld(vec(-150,0,0)), vec(1), Base:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/bobsters_trains/wheels/standard/wheel_84_double.mdl")
    holoBodygroup(Holo, 1, 8) holoColor(Holo, vec(31)) holoSkin(Holo, 0) 
    holoEntity(Holo):setSubMaterial(1, "WTP/metal_2")
    holoEntity(Holo):setSubMaterial(2, "models/unionslocos/train_metal3")
    holoParent(Holo, Base)
    Wheel_F = Holo
	   Holo++
    holoCreate(Holo, LeadFWheel:toWorld(vec(0,0,0)), vec(1), LeadFWheel:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/bobsters_trains/wheels/standard/wheel_42_double.mdl")
    holoBodygroup(Holo, 1, 3) holoColor(Holo, vec(31))
    holoEntity(Holo):setSubMaterial(1, "WTP/metal_2")
    holoEntity(Holo):setSubMaterial(2, "models/unionslocos/train_metal3")
    holoParent(Holo, LeadFWheel)
    Wheel_F_1 = Holo
	   Holo++
    holoCreate(Holo, LeadBWheel:toWorld(vec(0,0,0)), vec(1), LeadBWheel:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/bobsters_trains/wheels/standard/wheel_42_double.mdl")
    holoBodygroup(Holo, 1, 3) holoColor(Holo, vec(31))
    holoEntity(Holo):setSubMaterial(1, "WTP/metal_2")
    holoEntity(Holo):setSubMaterial(2, "models/unionslocos/train_metal3")
    holoParent(Holo, LeadBWheel)
    Wheel_F_2 = Holo    
	   Holo++
    holoCreate(Holo, Base:toWorld(vec(150,0,0)), vec(1), Base:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/bobsters_trains/wheels/standard/wheel_84_double.mdl")
    holoBodygroup(Holo, 1, 8) holoColor(Holo, vec(31))
    holoEntity(Holo):setSubMaterial(1, "WTP/metal_2")
    holoEntity(Holo):setSubMaterial(2, "models/unionslocos/train_metal3")
    holoParent(Holo, Base)
    Wheel_M = Holo
	   Holo++
    holoCreate(Holo, Base:toWorld(vec(-50,0,0)), vec(1), Base:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/bobsters_trains/wheels/standard/wheel_84_double.mdl")
    holoBodygroup(Holo, 1, 8) holoColor(Holo, vec(31))
    holoEntity(Holo):setSubMaterial(1, "WTP/metal_2")
    holoEntity(Holo):setSubMaterial(2, "models/unionslocos/train_metal3")
    holoParent(Holo, Base)
    Wheel_R = Holo
	   Holo++
    holoCreate(Holo, Base:toWorld(vec(50,0,0)), vec(1), Base:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/bobsters_trains/wheels/standard/wheel_84_double.mdl")
    holoEntity(Holo):setSubMaterial(1, "WTP/metal_2")
    holoEntity(Holo):setSubMaterial(2, "models/unionslocos/train_metal3")
    holoBodygroup(Holo, 1, 8) holoColor(Holo, vec(31))
    holoParent(Holo, Base)
    Wheel_M1 = Holo
	   Holo++
    holoCreate(Holo, Base:toWorld(vec(-50,55,-19.5)), vec(1), Base:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/unionsparts/bolt_2.mdl")
    holoColor(Holo, RodColor) holoMaterial(Holo,RodMaterial)
    holoParent(Holo, Wheel_R)
	   Holo++
    holoCreate(Holo, Base:toWorld(vec(-150,49,-19.5)), vec(1), Base:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/unionsparts/bolt_3.mdl")
    holoColor(Holo, RodColor) holoMaterial(Holo,RodMaterial)
    holoParent(Holo, Wheel_F)
	   Holo++
    holoCreate(Holo, Base:toWorld(vec(150,50,-19.5)), vec(1), Base:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/unionsparts/bolt_1.mdl")
    holoColor(Holo, RodColor) holoMaterial(Holo,RodMaterial)
    holoParent(Holo, Wheel_M)
    Holo++
    holoCreate(Holo, Base:toWorld(vec(50,63,-20)), vec(1), Base:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/unionsparts/bolt_4.mdl")
    holoColor(Holo, RodColor) holoMaterial(Holo,RodMaterial)
    holoParent(Holo, Wheel_M1)
    Holo++
    holoCreate(Holo, Base:toWorld(vec(70,-63,0)), vec(1), Base:toWorld(ang(0,180,0)))
    holoModel(Holo, "models/unionsparts/bolt_4.mdl")
    holoColor(Holo, RodColor) holoMaterial(Holo,RodMaterial)
    holoParent(Holo, Wheel_M1)
	   Holo++
    holoCreate(Holo, Base:toWorld(vec(-31,-55.5,0)), vec(1), Base:toWorld(ang(0,180,0)))
    holoModel(Holo, "models/unionsparts/bolt_2.mdl")
    holoColor(Holo, RodColor) holoMaterial(Holo,RodMaterial)
    holoParent(Holo, Wheel_R)
	   Holo++
    holoCreate(Holo, Base:toWorld(vec(-130.5,-49.5,0)), vec(1), Base:toWorld(ang(0,180,0)))
    holoModel(Holo, "models/unionsparts/bolt_3.mdl")
    holoColor(Holo, RodColor) holoMaterial(Holo,RodMaterial)
    holoParent(Holo, Wheel_F)
	   Holo=120
    holoCreate(Holo, Base:toWorld(vec(169.5,-50.5,0)), vec(1), Base:toWorld(ang(0,180,0)))
    holoModel(Holo, "models/unionsparts/bolt_1.mdl")
    holoColor(Holo, RodColor) holoMaterial(Holo,RodMaterial)
    holoParent(Holo, Wheel_M)
    
    #Side Rod Left
    Holo++ 
    holoCreate(Holo, Base:toWorld(vec(-27,0,0)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, Base) 
    SideRod_L = Holo
    Holo++
    holoCreate(Holo, Base:toWorld(vec(-27,DistFromWheel-37,0)), vec(1,1,1), Base:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/unionsparts/siderod_2.mdl") holoMaterial(Holo,RodMaterial)
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, SideRod_L)
        
    #Side Rod Right
    Holo++ 
    holoCreate(Holo, Base:toWorld(vec(-27,6.5,0)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, Base)
    SideRod_R = Holo
    Holo++
    holoCreate(Holo, Base:toWorld(vec(-27,DistFromWheel-37,0)), vec(1,1,1), Base:toWorld(ang(180,180,0)))
    holoModel(Holo, "models/unionsparts/siderod_2.mdl") holoMaterial(Holo,RodMaterial)
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, SideRod_R)
        
    #Main Rod Left
    Holo++ 
    holoCreate(Holo, Base:toWorld(vec(0,0,0)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, Base)
    MainRod_L = Holo
    Holo++
    holoCreate(Holo, Base:toWorld(vec(0,DistFromWheel-50,0)), vec(1,1,1), Base:toWorld(ang(7,0,180)))
    holoModel(Holo, "models/unionsparts/mainrod_2.mdl")   holoBodygroup(Holo,1,1)
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, MainRod_L)
        
    #Main Rod Right
    Holo++ 
    holoCreate(Holo, Base:toWorld(vec(0,0,0)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, Base)
    MainRod_R = Holo
    Holo++
    holoCreate(Holo, Base:toWorld(vec(0,DistFromWheel-29.5,0)), vec(1,1,1), Base:toWorld(ang(-7,0,0)))
    holoModel(Holo, "models/unionsparts/mainrod_2.mdl")   holoBodygroup(Holo,1,1)
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, MainRod_R)

    #Crosshead Left
    Holo++ 
    holoCreate(Holo, Base:toWorld(vec(0,0,0)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, Base)
    Crosshead_L = Holo

    A = 40
    holoCreate(A)
    holoPos(A,Base:toWorld(vec(9.6,10.5,-0.8)))
    holoParent(A, Crosshead_L)
    holoColor(A, RodColor)
    holoModel(A, "models/unionsparts/crosshead_2.mdl")
    holoAng(A, Base:toWorld(ang(0,-180,0)) )
    holoScale(A, vec(1))
    holoMaterial(A, RodMaterial) holoColor(Holo, RodColor)
    holoBodygroup(A,1,1)
            
    #Crosshead Right
    Holo++ 
    holoCreate(Holo, Base:toWorld(vec(0,0,0)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, Base)
    Crosshead_R = Holo
                
    A = 41
    holoCreate(A)
    holoPos(A,Base:toWorld(vec(9.6,-10.5,-0.8)))
    holoParent(A, Crosshead_R)
    holoColor(A, RodColor)
    holoModel(A, "models/unionsparts/crosshead_2.mdl")
    holoAng(A, Base:toWorld(ang(0,-180,0)) )
    holoScale(A, vec(1))
    holoMaterial(A, RodMaterial) holoColor(Holo, RodColor)
    holoBodygroup(A,1,0)
            
    #Left Union link
    Holo++
    holoCreate(Holo, Base:toWorld(vec(7.5,19.5,-8)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, Crosshead_L) 
    UnionLink_L = Holo
                                            
    Holo++
    holoCreate(Holo, Base:toWorld(vec(-2.25,DistFromWheel-17,-8)), vec(1,1,1), Base:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/unionsparts/unionlink_2.mdl") 
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, UnionLink_L)
    
    #Right Union link
    Holo++
    holoCreate(Holo, Base:toWorld(vec(7.5,-19.5,-8)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, Crosshead_R) 
    UnionLink_R = Holo
                                            
    Holo++
    holoCreate(Holo, Base:toWorld(vec(-2.25,DistFromWheel-63,-8)), vec(1,1,1), Base:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/unionsparts/unionlink_2.mdl") 
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, UnionLink_R)
                    
    Holo++
    #Left Eccentric crank
    holoCreate(Holo, Base:toWorld(vec(50,DistFromWheel+20,-RodRadius)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, Wheel_M1)
    EccentricCrank_L = Holo
    Holo++
    holoCreate(Holo, Base:toWorld(vec(50,DistFromWheel+22,-20)), vec(1.15,1.15,1.15), Base:toWorld(ang(33.5,0,0)))
    holoModel(Holo, "models/unionsparts/returncrank_2.mdl")
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, EccentricCrank_L)
    
    Holo++
    #Right Eccentric crank
    holoCreate(Holo, Base:toWorld(vec(-50,DistFromWheel+20,-RodRadius)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, Wheel_M1)
    EccentricCrank_R = Holo
    Holo++
    holoCreate(Holo, Base:toWorld(vec(50+20,-DistFromWheel-22,0)), vec(1.15,1.15,1.15), Base:toWorld(ang(90,180,0)))
    holoModel(Holo, "models/unionsparts/returncrank_2.mdl")
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, EccentricCrank_R)
            
    #Left Eccentric Rod
    Holo++
    holoCreate(Holo, Base:toWorld(vec(55,(DistFromWheel+25.2),-0.5)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, EccentricCrank_L)
    EccentricRod_L = Holo
    Holo++
    holoCreate(Holo, Base:toWorld(vec(28.6,DistFromWheel+24,-0.25)), vec(1,1,1), Base:toWorld(ang(5,0,180)))
    holoModel(Holo, "models/unionsparts/eccentricrod_2.mdl")
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, EccentricRod_L)
    
    #Right Eccentric Rod
    Holo++
    holoCreate(Holo, Base:toWorld(vec(51,(-DistFromWheel-25.2),7)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, EccentricCrank_R)
    EccentricRod_R = Holo
    Holo++
    holoCreate(Holo, Base:toWorld(vec(25,-DistFromWheel-24,7)), vec(1,1,1), Base:toWorld(ang(5,0,180)))
    holoModel(Holo, "models/unionsparts/eccentricrod_2.mdl")
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, EccentricRod_R)
                        
    #Left Expansion Plate
    Holo++
    holoCreate(Holo, Base:toWorld(vec(156,(DistFromWheel+25),32.5)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, Base)
    ExpansionPlate_L = Holo
    Holo++
    holoCreate(Holo, Base:toWorld(vec(156,DistFromWheel+25,25)), vec(1,1,1), Base:toWorld(ang(0,180,0)))
    holoModel(Holo, "models/unionsparts/expansionlink_1.mdl") 
    holoColor(Holo, RodColor) holoEntity(Holo):setSubMaterial(1, RodMaterial)
    holoParent(Holo, ExpansionPlate_L)
    
    #Right Expansion Plate
    Holo++
    holoCreate(Holo, Base:toWorld(vec(156,(-DistFromWheel-25),32.5)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, Base)
    ExpansionPlate_R = Holo
    Holo++
    holoCreate(Holo, Base:toWorld(vec(156,-DistFromWheel-25,25)), vec(1,1,1), Base:toWorld(ang(0,180,0)))
    holoModel(Holo, "models/unionsparts/expansionlink_1.mdl") 
    holoColor(Holo, RodColor) holoEntity(Holo):setSubMaterial(1, RodMaterial)
    holoParent(Holo, ExpansionPlate_R)
                                                        
    #Left Eccentric End
    Holo++
    holoCreate(Holo, Base:toWorld(vec(153,(DistFromWheel+24),13)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoMaterial(Holo, "") holoColor(Holo, RodColor)
    holoParent(Holo, ExpansionPlate_L)
    EccentricRodEnd_L = Holo
    
    #Right Eccentric End
    Holo++
    holoCreate(Holo, Base:toWorld(vec(153,(-DistFromWheel-24),13)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoMaterial(Holo, "") holoColor(Holo, RodColor)
    holoParent(Holo, ExpansionPlate_R)
    EccentricRodEnd_R = Holo
                                                        
    #Left Valve Stem
    Holo++
    holoCreate(Holo, Base:toWorld(vec(10,(DistFromWheel+20), 34)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoMaterial(Holo, "") holoColor(Holo, vec4(0,0,0,255))
    holoParent(Holo, Base) 
    ValveStem_L = Holo
                                                
    Holo++
    holoCreate(Holo, Base:toWorld(vec(40,DistFromWheel+20,32)), vec(1,1,1), Base:toWorld(ang(0,180,0)))
    holoModel(Holo, "models/unionsparts/valverod_2.mdl") 
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, ValveStem_L)
    
    #Right Valve Stem
    Holo++
    holoCreate(Holo, Base:toWorld(vec(10,(DistFromWheel+24), 34)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, Base) 
    ValveStem_R = Holo
                                                
    Holo++
    holoCreate(Holo, Base:toWorld(vec(40,DistFromWheel+25,32)), vec(1,1,1), Base:toWorld(ang(0,180,0)))
    holoModel(Holo, "models/unionsparts/valverod_2.mdl") 
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, ValveStem_R)
                                                
    #Left Combination Lever
    
    Holo++
    holoCreate(Holo, Base:toWorld(vec(8.9,(DistFromWheel+20), 38)), vec(ParentScale), Base:toWorld(ang(0,180,0)))
    holoParent(Holo, ValveStem_L)
    Combination_L = Holo
    
    Holo++
    holoCreate(Holo, Base:toWorld(vec(7.5,DistFromWheel+21,-1.5)), vec(0.3,1,0.3), Base:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/sprops/geometry/fdisc_12.mdl") holoMaterial(Holo,RodMaterial)
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, Combination_L)
                                                       
    Holo++
    holoCreate(Holo, Base:toWorld(vec(7.85,DistFromWheel+21,8.5)), vec(1,1,1), Base:toWorld(ang(2,0,0)))
    holoModel(Holo, "models/unionsparts/combinationlever_2.mdl") 
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, Combination_L)
    
    #Right Combination Lever
    
    Holo++
    holoCreate(Holo, Base:toWorld(vec(8.9,(DistFromWheel+26), 38)), vec(ParentScale), Base:toWorld(ang(0,180,0)))
    holoParent(Holo, ValveStem_R)
    Combination_R = Holo
    
    Holo++
    holoCreate(Holo, Base:toWorld(vec(7.5,DistFromWheel+26.5,-1.5)), vec(0.3,1,0.3), Base:toWorld(ang(0,0,0)))
    holoModel(Holo, "models/sprops/geometry/fdisc_12.mdl")
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, Combination_R)
                                                       
    Holo++
    holoCreate(Holo, Base:toWorld(vec(7.85,DistFromWheel+26.5,8.5)), vec(1,1,1), Base:toWorld(ang(2,0,0)))
    holoModel(Holo, "models/unionsparts/combinationlever_2.mdl") 
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, Combination_R)
                                                
    #Left Combination End 
    Holo++
    holoCreate(Holo, Base:toWorld(vec(7.5,(DistFromWheel+17.8),-1.5)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, Combination_L)
    CombinationEnd_L = Holo
    
    #Right Combination End 
    Holo++
    holoCreate(Holo, Base:toWorld(vec(7.5,(DistFromWheel+30),-1.5)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, Combination_R)
    CombinationEnd_R = Holo
                                            
    #Left Expansion Link
    Holo++
    holoCreate(Holo, Base:toWorld(vec(3,(DistFromWheel+12.5),13)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, ExpansionPlate_L) 
    ExpansionLink_L = Holo

    Holo++
    holoCreate(Holo, Base:toWorld(vec(3,DistFromWheel+12.5,13)), vec(1,1,1), Base:toWorld(ang(-4,0,0)))
    holoModel(Holo, "models/unionsparts/radiusrod_1.mdl")
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, ExpansionLink_L)
    
    #Right Expansion Link
    Holo++
    holoCreate(Holo, Base:toWorld(vec(3,(DistFromWheel+12.5),13)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, ExpansionPlate_R)    
    ExpansionLink_R = Holo

    Holo++
    holoCreate(Holo, Base:toWorld(vec(3,DistFromWheel+12.5,13)), vec(1,1,1), Base:toWorld(ang(4,0,-180)))
    holoModel(Holo, "models/unionsparts/radiusrod_1.mdl") 
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, ExpansionLink_R)
    
    #lifting arm bar
    Holo=50
    holoCreate(Holo, Base:toWorld(vec(180,0,50)), vec(2), Base:toWorld(ang(0,0,-90)))
    holoModel(Holo, "models/sprops/cylinders/size_2/cylinder_3x72.mdl")
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, Base)
    Holo++
    holoCreate(Holo, Base:toWorld(vec(180,(DistFromWheel+8.5),50)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, Base)
    LiftingArm = Holo
    
    #left lifting arm
    
    Holo++
    holoCreate(Holo, Base:toWorld(vec(180,(DistFromWheel+30),50)), vec(1.2,1.2,1), Base:toWorld(ang(0,-180,0)))
    holoModel(Holo, "models/unionsparts/reverseringarm_1.mdl")
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, LiftingArm)
    
    #Right Lifting Arm
    
    Holo++
    holoCreate(Holo, Base:toWorld(vec(180,(-DistFromWheel-30),50)), vec(1.2,1.2,1), Base:toWorld(ang(0,-180,-180)))
    holoModel(Holo, "models/unionsparts/reverseringarm_1.mdl")
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, LiftingArm)
    
    #Left Lifting link
    
    Holo++
    holoCreate(Holo, Base:toWorld(vec(165,(DistFromWheel+25),52)), vec(0.2), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, LiftingArm) holoColor(Holo, vec(31))
    LiftingLink_L = Holo
    Holo++
    holoCreate(Holo, Base:toWorld(vec(155,-(-DistFromWheel-25.5),51)), vec(0.6), Base:toWorld(ang(90,0,0)))
    holoModel(Holo, "models/sprops/cylinders/size_2/cylinder_3x30.mdl")
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, LiftingLink_L)
    Holo++
    holoCreate(Holo, Base:toWorld(vec(-8,(DistFromWheel+12),13)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, ExpansionLink_L)
    LiftingLinkEnd_L = Holo
    
    #Right Lifting link
    
    Holo++
    holoCreate(Holo, Base:toWorld(vec(165,(-DistFromWheel-25),52)), vec(0.2), Base:toWorld(ang(0,0,0)))
    holoParent(Holo, LiftingArm) holoColor(Holo, vec(31))
    LiftingLink_R = Holo
    Holo++
    holoCreate(Holo, Base:toWorld(vec(155,-(DistFromWheel+25.5),51)), vec(0.6), Base:toWorld(ang(90,0,0)))
    holoModel(Holo, "models/sprops/cylinders/size_2/cylinder_3x30.mdl")
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, LiftingLink_R)
    Holo++
    holoCreate(Holo, Base:toWorld(vec(-8,(DistFromWheel+12),13)), vec(ParentScale), Base:toWorld(ang(0,0,0)))
    holoMaterial(Holo, RodMaterial) holoColor(Holo, RodColor)
    holoParent(Holo, ExpansionLink_R)
    LiftingLinkEnd_R = Holo
                                                        

                                                        
    WheelRotation = 360
    function void updateRods(Speed:number) {
        if(Speed != 0) {
            WheelRotation += Speed * 1
            if(WheelRotation > 360) {
                WheelRotation = WheelRotation - 360
            }elseif(WheelRotation < -360) {
                WheelRotation = WheelRotation + 360
            }
            holoAng(Wheel_F, Base:toWorld(ang(WheelRotation,0,0)))
            holoAng(Wheel_R, Base:toWorld(ang(WheelRotation,0,0)))
            holoAng(Wheel_M, Base:toWorld(ang(WheelRotation,0,0)))
            holoAng(Wheel_M1, Base:toWorld(ang(WheelRotation,0,0)))
            holoAng(Wheel_F_1, Base:toWorld(ang(WheelRotation,0,0)))
            holoAng(Wheel_F_2, Base:toWorld(ang(WheelRotation,0,0)))
            #left
            #main rod
            local MainRodCos = cos(WheelRotation+90)*RodRadius
            local MainRodSin = sin(WheelRotation+90)*RodRadius
            holoPos(SideRod_L, Base:toWorld(vec(0,47,0) + vec(MainRodCos,0,-MainRodSin)))
            holoPos(MainRod_L, Base:toWorld(vec(49,DistFromWheel+7,0) + vec(MainRodCos,0,-MainRodSin)))
            holoPos(Crosshead_L, Base:toWorld(vec(188,(DistFromWheel+7),0) + vec(MainRodCos,0,0)))
            local Crosshead_Ang = (holoEntity(MainRod_L):pos() - holoEntity(Crosshead_L):pos()):toAngle()
            holoAng(MainRod_L, Crosshead_Ang)
            #expansion plate
            local EccentricCos = cos(WheelRotation+13)*(RodRadius*2.4)
            holoAng(ExpansionPlate_L, Base:toWorld(ang(-EccentricCos/3,0,0)))
            local EccentricRod_Ang = (holoEntity(EccentricRod_L):pos() - holoEntity(EccentricRodEnd_L):pos()):toAngle()
            holoAng(EccentricRod_L, EccentricRod_Ang)
            
            #right
            MainRodCos = cos(WheelRotation)*RodRadius
            MainRodSin = sin(WheelRotation)*RodRadius
            holoPos(SideRod_R, Base:toWorld(vec(0,-47,0) + vec(MainRodCos,0,-MainRodSin)))
            holoPos(MainRod_R, Base:toWorld(vec(49,-(DistFromWheel+7),0) + vec(MainRodCos,0,-MainRodSin)))
            holoPos(Crosshead_R, Base:toWorld(vec(188,-(DistFromWheel+7),0) + vec(MainRodCos,0,0)))
            Crosshead_Ang = (holoEntity(MainRod_R):pos() - holoEntity(Crosshead_R):pos()):toAngle()
            holoAng(MainRod_R, Crosshead_Ang)
            #expansion plate
            EccentricCos = cos(WheelRotation+288)*(RodRadius*3.4)
            holoAng(ExpansionPlate_R, Base:toWorld(ang(-EccentricCos/3,0,0)))
            EccentricRod_Ang = (holoEntity(EccentricRod_R):pos() - holoEntity(EccentricRodEnd_R):pos()):toAngle()
            holoAng(EccentricRod_R, EccentricRod_Ang)
        } 
        local ReverserChanged = changed(Reverser)
        if(ReverserChanged | (!ReverserChanged & Speed != 0)) {
            if(ReverserChanged) {
                local ExpansionOffset = (Reverser > 0 ? vec(2,0,14) : vec(2,0,-14)) * abs(Reverser)
                holoPos(ExpansionLink_L, holoEntity(ExpansionPlate_L):toWorld(ExpansionOffset))  
                holoPos(ExpansionLink_R, holoEntity(ExpansionPlate_R):toWorld(ExpansionOffset)) 
                
                local LiftingOffset = -35 * -Reverser 
                holoAng(LiftingArm, Base:toWorld(ang(LiftingOffset,0,0)))
            }
            #left
            local ExpansionLink_Ang = (holoEntity(ExpansionLink_L):pos() - holoEntity(Combination_L):pos()):toAngle()
            holoAng(ExpansionLink_L, ExpansionLink_Ang)
            local ValveStemAmount = sin(WheelRotation+(90*Reverser)) * (2*abs(Reverser))
            holoPos(ValveStem_L, Base:toWorld(vec(212,(DistFromWheel+24), 30)-vec(ValveStemAmount -
            ((0.5) * -Reverser),0,0)))
            holoAng(Combination_L, Base:toWorld(ang((sin(WheelRotation-(8*Reverser))*30)+(-Reverser-4),0,0)))
            local UnionLink_Ang = (holoEntity(UnionLink_L):pos() - holoEntity(CombinationEnd_L):pos()):toAngle()
            holoAng(UnionLink_L, UnionLink_Ang)
            local LiftingLink_Ang = (holoEntity(LiftingLink_L):pos() - holoEntity(LiftingLinkEnd_L):pos()):toAngle()
            holoAng(LiftingLink_L, LiftingLink_Ang)
            #right
            ExpansionLink_Ang = (holoEntity(ExpansionLink_R):pos() - holoEntity(Combination_R):pos()):toAngle()
            holoAng(ExpansionLink_R, ExpansionLink_Ang)
            ValveStemAmount = sin(WheelRotation+(90*Reverser)-90) * (2*abs(Reverser))
            holoPos(ValveStem_R, Base:toWorld(vec(212,-(DistFromWheel+24),30)-vec(ValveStemAmount -
            ((0.5) * Reverser),0,0)))
            holoAng(Combination_R, Base:toWorld(ang((sin(5+WheelRotation-(8*Reverser+100))*30-2)+(Reverser),0,0)))
            UnionLink_Ang = (holoEntity(UnionLink_R):pos() - holoEntity(CombinationEnd_R):pos()):toAngle()
            holoAng(UnionLink_R, UnionLink_Ang)
            LiftingLink_Ang = (holoEntity(LiftingLink_R):pos() - holoEntity(LiftingLinkEnd_R):pos()):toAngle()
            holoAng(LiftingLink_R, LiftingLink_Ang)
        }
    }
    updateRods(1)
}

interval(50)
if(clk()) {
    Speed = round(Base:velL():x() / 10)
    updateRods(Speed)
}
