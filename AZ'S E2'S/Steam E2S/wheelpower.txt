@name wheelpower
@inputs ReverserF ReverserB Driver:entity W S Active Reset BrakeIncr BrakeDecr Sander D1:entity D2:entity D3:entity D4:entity
@persist T Brake
@outputs Throttle R Stack Idle Brake



if(first()|duped()){
    Throttle=0
    R=0
}

if(Active){
interval(10)


if(W){
    Throttle=Throttle+0.1
}
if(S){
    Throttle=Throttle-0.1
}
if(ReverserB){
    R=R+0.1
}

if(ReverserF){
    R=R-0.1
}

if(BrakeIncr){
    Brake=Brake+0.1
}
if(BrakeDecr){
    Brake=Brake-0.1
}


if(Brake>10){
    Brake=10
}
if(Brake<0){
    Brake=0
}


if(R>5){
    R=5
}
if(R<-5){
    R=-5
}


if(Sander){
    Mat="jalopytire"
}
else{
    Mat="metal"
}

if(Throttle>10){
    Throttle=10
}
if(Throttle<0){
    Throttle=0
}
if(Reset){
    Throttle=0
}


if(Throttle<2){
    Idle=1
    Stack=0
}
else{
    Stack=1
    Idle=0
}
}


else{
    Throttle=0
    Stack=0
    Idle=0
    R=0
    Brake=0
}

Mul=5000000*R

T=Throttle/10
A=Mul*T

B=Driver:angVel():pitch()*Brake*1000

Driver:applyAngForce(ang(A, 0, 0))
Driver:applyAngForce(ang(-B, 0, 0))
D1:propPhysicalMaterial(Mat)
D2:propPhysicalMaterial(Mat)
D3:propPhysicalMaterial(Mat)
D4:propPhysicalMaterial(Mat)
