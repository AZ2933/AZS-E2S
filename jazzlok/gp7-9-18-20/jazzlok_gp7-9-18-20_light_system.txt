@name Jazzlok gp7-9-18-20 Light System
@persist Increment Increment2 Ditch Ditch2 Delay Delay2 Ditch_T Ditchlight_On Flash Flashy Headlights
@inputs [HDLT_Lamp Signal_Lamp Locomotive]:entity [LIGHT_SYSTEM_INPUT LOCOMOTIVE_DATA]:array Reverser Ditch_Toggle
@outputs Signal_Brightness Signal_RGB:vector Signal_On Lamp_FOV 
@outputs HDLT_Lamp_Brightness HDLT_Lamp_FOV HDLT_Lamp_RGB:vector HDLT_Front_Lamp_On HDLT_Rear_Lamp_On
@model models/sprops/cuboids/height06/size_1/cube_6x6x6.mdl
@trigger none

Gyra_Mode = 1
Speed = 4
Radius = 25
Ditch_Color = vec4(255,180,0,255)   
Scale = 1.55

Locomotive_Model = LOCOMOTIVE_DATA[3,number] 
Front_Hood_Type = LOCOMOTIVE_DATA[7,number] 
Headlights = LOCOMOTIVE_DATA[8,number]

Mars_Gyra_Toggle = LIGHT_SYSTEM_INPUT[1,number]  
HDLT_Toggle = LIGHT_SYSTEM_INPUT[3,number]  
Signal_Light_Dimmer = LIGHT_SYSTEM_INPUT[4,number]  
HDLT_Dimmer  = LIGHT_SYSTEM_INPUT[5,number]  

if(first() | dupefinished())
{
    timer("spawn",7000)
}

if(clk("spawn"))
{
    if(Headlights == 2 | Headlights == 3)
    { 
    A = 4
    holoCreate(A)
    holoColor(A,vec(255,140,0))
    holoSkin(A,4)
    holoParent(A,Locomotive)
    holoModel(A, "models/sprops/trans/lights/light_a4.mdl")
    holoScale(A, vec(0.45))
    holoPos(A,Locomotive:toWorld(vec(0,224.25,78.8)))
    holoAng(A,Locomotive:toWorld(ang(-90,0,0)))  

    A = 5
    holoCreate(A)
    holoColor(A,vec(255,140,0))
    holoSkin(A,4)
    holoParent(A,Locomotive)
    holoModel(A, "models/sprops/trans/lights/light_a4.mdl")
    holoScale(A, vec(0.45))
    holoPos(A,Locomotive:toWorld(vec(0,224.25,70.8)))
    holoAng(A,Locomotive:toWorld(ang(-90,0,0)))     

    A = 6
    holoCreate(A)
    holoParent(A,Locomotive)
    holoModel(A, "models/sprops/trans/exhaust/tip_1.mdl")
    holoScale(A, vec(0.46,2,2))
    holoPos(A,Locomotive:toWorld(vec(0,225,70.8)))
    holoAng(A,Locomotive:toWorld(ang(0,90,0)))     
        
    A = 7
    holoCreate(A)
    holoParent(A,Locomotive)
    holoModel(A, "models/sprops/trans/exhaust/tip_1.mdl")
    holoScale(A, vec(0.46,2,2))
    holoPos(A,Locomotive:toWorld(vec(0,225,78.8)))
    holoAng(A,Locomotive:toWorld(ang(0,90,0)))    

    A = 8
    holoCreate(A)
    holoParent(A,Locomotive)
    holoColor(A,vec4(255,140,0,50))
    holoModel(A, "models/sprops/geometry/t_fdisc_12.mdl")
    holoMaterial(A, "wtp/metal_2")
    holoScale(A, vec(0.53,0.1,0.53))
    holoPos(A,Locomotive:toWorld(vec(0,226.2,78.8)))
    holoAng(A,Locomotive:toWorld(ang(0,0,0)))    
        
    A = 9
    holoCreate(A)
    holoParent(A,Locomotive)
    holoColor(A,vec4(255,140,0,50))
    holoMaterial(A, "wtp/metal_2")
    holoModel(A, "models/sprops/geometry/t_fdisc_12.mdl")
    holoScale(A, vec(0.53,0.1,0.53))
    holoPos(A,Locomotive:toWorld(vec(0,226.2,70.8)))
    holoAng(A,Locomotive:toWorld(ang(0,0,0)))   
    }  

    if(Front_Hood_Type == 1) 
    {
        A = 10
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(0,-320.5,56.5)))
        holoAng(A,Locomotive:toWorld(ang(0,0,90)))     

        A = 11
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(0,-320.5,65.5)))
        holoAng(A,Locomotive:toWorld(ang(0,0,90)))     
    }
    elseif(Front_Hood_Type == 2) 
    {
        A = 10
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(0,-319,56.5)))
        holoAng(A,Locomotive:toWorld(ang(0,0,90)))     

        A = 11
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(0,-319,64.5)))
        holoAng(A,Locomotive:toWorld(ang(0,0,90)))     
    }
        
    if(Headlights == 1 & Front_Hood_Type == 2) 
    {
        A = 17
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(0,224,71.5)))
        holoAng(A,Locomotive:toWorld(ang(0,0,-90)))     

        A = 18
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(0,224,79)))
        holoAng(A,Locomotive:toWorld(ang(0,0,-90)))                  
    }    
    elseif((Headlights == 1 | Headlights == 4 ) & Front_Hood_Type == 1) 
    {
        A = 17
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(0,320.5,56.5)))
        holoAng(A,Locomotive:toWorld(ang(0,0,-90)))     

        A = 18
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(0,320.5,65.5)))
        holoAng(A,Locomotive:toWorld(ang(0,0,-90)))     
    } 
    elseif(Headlights == 4  & Front_Hood_Type == 2) 
    {
        A = 17
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(0,226.25,71.5)))
        holoAng(A,Locomotive:toWorld(ang(0,0,-90)))     

        A = 18
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(0,226.25,79)))
        holoAng(A,Locomotive:toWorld(ang(0,0,-90)))                  
    }   
            
    if((Headlights == 2 | Headlights == 3) & Front_Hood_Type == 2) 
    {
        A = 17
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(0,317.25,16)))
        holoAng(A,Locomotive:toWorld(ang(0,0,-90)))     

        A = 18
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(0,317.25,9)))
        holoAng(A,Locomotive:toWorld(ang(0,0,-90)))                  
    }
    
    if(Headlights == 4) 
    {
        A = 19
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(31.5,345,-33.5)))
        holoAng(A,Locomotive:toWorld(ang(0,0,-90)))  
        
        A = 20
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(-31.5,345,-33.5)))
        holoAng(A,Locomotive:toWorld(ang(0,0,-90)))   
        
        A = 21
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(31.5,-345,-33.5)))
        holoAng(A,Locomotive:toWorld(ang(0,0,90)))  
        
        A = 22
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,240,230,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(4))
        holoPos(A,Locomotive:toWorld(vec(-31.5,-345,-33.5)))
        holoAng(A,Locomotive:toWorld(ang(0,0,90)))       
    }
    
    if(Headlights == 3) 
    {
        A = 23
        holoCreate(A)
        holoParent(A,Locomotive)
        holoColor(A,vec4(255,0,0,250))
        holoMaterial(A, "jazzie/light_glow01")
        holoModel(A, "plane")
        holoScale(A, vec(5))
        holoPos(A,Locomotive:toWorld(vec(0,230.5,90.5)))
        holoAng(A,Locomotive:toWorld(ang(0,0,-90)))  
    }                       
}


if(Signal_Light_Dimmer == 0)
{
    Signal_Lamp_On = 0
    
    holoColor(1,vec4(0))
    holoColor(2,vec4(0))    
    holoColor(3,vec4(0))
    
    holoColor(12,vec4(255,140,0,0))  

}

if(Signal_Light_Dimmer == 1)
{
    Signal_Lamp_Brightness = 1
    Signal_Lamp_RGB = vec(255,150,0)
    Signal_Lamp_FOV = 50
    Signal_Lamp_On = 1
        
    holoColor(1,vec4(255,150,0,4))
    holoColor(2,vec4(255,150,0,3))    
    holoColor(3,vec4(255,150,0,2))

    Signal_Lamp_On = 1
}

if(Signal_Light_Dimmer == 2)
{
    holoColor(1,vec4(255,150,0,4))
    holoColor(2,vec4(255,150,0,3))    
    holoColor(3,vec4(255,150,0,2))
    
    Signal_Lamp_Brightness = 2
    Signal_Lamp_RGB = vec(255,150,0)
    Signal_Lamp_FOV = 70
}

if(HDLT_Dimmer == 0 | !HDLT_Toggle | Reverser == 0)
{
    HDLT_Front_Lamp_On = 0
    HDLT_Rear_Lamp_On = 0
    
    holoColor(14,vec4(0))
    holoColor(15,vec4(0)) 
    holoColor(16,vec4(0))  
    
    holoColor(10,vec4(0))
    holoColor(11,vec4(0))
             
    holoColor(17,vec4(0))
    holoColor(18,vec4(0))
}

if(HDLT_Dimmer == 1 & HDLT_Toggle)
{
    HDLT_Lamp_RGB = vec(255,240,230)
    HDLT_Lamp_Brightness = 1
    HDLT_Lamp_FOV = 80
    
    if(Reverser == 1)
    {
        holoColor(14,vec4(255,220,220,1))
        holoColor(15,vec4(255,220,220,2)) 
        holoColor(16,vec4(255,220,220,4))  
         
        holoColor(17,vec4(255,240,230,150))
        holoColor(18,vec4(255,240,230,150))
    
        holoColor(10,vec4(0))
        holoColor(11,vec4(0))
        
        HDLT_Front_Lamp_On = 1
        HDLT_Rear_Lamp_On = 0    
    }
    
    if(Reverser == -1)
    {
        holoColor(14,vec4(0))
        holoColor(15,vec4(0)) 
        holoColor(16,vec4(0))  
       
        holoColor(17,vec4(0))
        holoColor(18,vec4(0))
    
        holoColor(10,vec4(255,240,230,150))
        holoColor(11,vec4(255,240,230,150))
        
        HDLT_Rear_Lamp_On = 1
        HDLT_Front_Lamp_On = 0
    }
}

if(HDLT_Dimmer == 2 & HDLT_Toggle)
{
    HDLT_Lamp_RGB = vec(255,240,230)
    HDLT_Lamp_Brightness = 2
    HDLT_Lamp_FOV = 100

    if(Reverser == 1)
    {
        holoColor(14,vec4(255,220,220,1))
        holoColor(15,vec4(255,220,220,2)) 
        holoColor(16,vec4(255,220,220,4))  
         
        holoColor(17,vec4(255,240,230,250))
        holoColor(18,vec4(255,240,230,250))
    
        holoColor(10,vec4(0))
        holoColor(11,vec4(0))
        
        HDLT_Front_Lamp_On = 1
        HDLT_Rear_Lamp_On = 0    
    }
    
    if(Reverser == -1)
    {
        holoColor(14,vec4(0))
        holoColor(15,vec4(0)) 
        holoColor(16,vec4(0))  
       
        holoColor(17,vec4(0))
        holoColor(18,vec4(0))
    
        holoColor(10,vec4(255,240,230,250))
        holoColor(11,vec4(255,240,230,250))
        
        HDLT_Rear_Lamp_On = 1
        HDLT_Front_Lamp_On = 0
    }
}

if(Mars_Gyra_Toggle & Headlights >= 2 & Headlights <= 3)
{
    Delay2 = 0      
    interval(10) 
    Increment += 0.5
    if (Increment > 360) 
    {
        Increment = 1
    }

    if(Gyra_Mode)
    {            
        Rotate = vec(cos(Increment*3*Speed)*Radius,sin(Increment*3*Speed)*Radius,0)
    }
    
    if(!Gyra_Mode)
    {            
        Rotate = vec(cos(Increment*2*Speed)*Radius,sin(Increment*4*Speed)*Radius,0)
    }
        
    Signal_Lamp:setAng(Locomotive:toWorld(ang(Rotate)+ang(0,90,0)))
    Signal_Lamp:setPos(Locomotive:toWorld(+vec(0,227,74))) 
    
    holoAng(4,Locomotive:toWorld(ang(Rotate)+ang(0,90,0)))
    holoAng(5,Locomotive:toWorld(ang(Rotate)+ang(0,90,0)))
      
    Signal_Lamp:setAlpha(0)
    
    Flash++

    if(Flash > 30)
    {
        Flash = 0
        Flashy = !Flashy
    }
    
    if(Flashy)
    {
        holoColor(23,vec4(255,0,0,250))
    }
    else
    {
        holoColor(23,vec4(0))
    }
}
else
{
    interval(100) 
    Signal_Lamp:setPos(Locomotive:toWorld(+vec(0,227,74)))    
    Signal_Lamp:setAng(Locomotive:toWorld(ang(Rotate)+ang(0,90,0)))

    holoAng(4,Locomotive:toWorld(ang(Rotate)+ang(0,90,0)))
    holoAng(5,Locomotive:toWorld(ang(Rotate)+ang(0,90,0)))
    
    holoColor(23,vec4(0))     
    Flashy = 0
    
    if(Delay2 <= 3)
    {
        Delay2++
    } 
    
    if(Delay2 >= 3)
    {  
        Signal_Lamp:parentTo(Locomotive)
    }
}

if(Mars_Gyra_Toggle & Headlights == 4)
{
    interval(66) 
    timer("Ditchlight",2500)
    
    if(clk("Ditchlight"))
    {
        Ditch_T = !Ditch_T
    }
    
    if(!Ditch_T)
    {
        Ditch_T2 = 1
    }
    else
    {
        Ditch_T2 = 0
    }
        
    Ditch = Ditch + (Ditch_T - Ditch) /  max( 20, 0 ) 
    
    Ditch2 = Ditch2 + (Ditch_T2 - Ditch2) /  max( 20, 0 ) 
        
    holoColor(19,Ditch_Color * Ditch2 * 1.5) 
    holoColor(20,Ditch_Color * Ditch * 1.5) 
    holoColor(21,Ditch_Color * Ditch2 * 1.5) 
    holoColor(22,Ditch_Color * Ditch * 1.5)        
}
else
{
    holoColor(19,vec4(0)) 
    holoColor(20,vec4(0)) 
    holoColor(21,vec4(0)) 
    holoColor(22,vec4(0))   
}

